spring:
  datasource:
    fun:
      username: operation
      password: Operation53
      driverClassName: com.mysql.jdbc.Driver
      url: jdbc:mysql://10.85.159.202:3308/operation?allowMultiQueries=true&amp;useUnicode=true&amp;characterEncoding=UTF-8&amp;autoReconnect=true&amp;failOverReadOnly=false

      # 配置Druid的其他参数，以下配置必须增加一个配置文件才能有效
      type: com.alibaba.druid.pool.DruidDataSource
      # 初始化大小，最小，最大
      initialSize: 1
      minIdle: 1
      maxActive: 20
      # 获取连接等待超时的时间
      maxWait: 60000
      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      timeBetweenEvictionRunsMillis: 60000
      # 配置一个连接在池中最小生存的时间，单位是毫秒
      minEvictableIdleTimeMillis: 300000
      validationQuery: SELECT 1
      testWhileIdle: true
      testOnBorrow: false
      testOnReturn: false
      poolPreparedStatements: true
      # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
      filters: stat, wall
      # 打开PSCache，并且指定每个连接上PSCache的大小
      maxPoolPreparedStatementPerConnectionSize: 20
      # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
      connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500
      # 合并多个DruidDataSource的监控数据
      useGlobalDataSourceStat: true

  #配置中心连接信息，必须在bootstrap中，其他配置可以在application中
  #配置中心，成功后启动，在springboot图标下面显示，Fetching config from server at : http://localhost:9050
  #在下面一行显示，Located environment: name=api-manage, profiles=[dev], label=master, version=e374db5fd8052eaa345706d8dcc2a004bfd8390f, state=null
  cloud:
    config:
      #配置中心服务集群，两个都要设置，enabled必须是true
      #缺点：开发时，必须启动eureka注册中心
      #discovery:
      #enabled: true
      #serviceId: config-server
      #单个配置中心服务
      #优点：开发时，不需要启动eureka注册中心，开发方便
      uri: http://localhost:9050
      label: main

eureka:
  client:
    serviceUrl:
      defaultZone: http://localhost:8761/eureka/
